version: '3'

volumes:
    prometheus_data_config_c:
    grafana_data_config_c: 
    bitcoin_pool_side_data:
    bitcoin_sv1_pool_side_data:

networks:
  monitor-net:
  sv2-net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/24
          gateway: 10.5.0.1

services:

  sv2-roles-builder:
    build:
      dockerfile: ./sri-roles.dockerfile
    container_name: sv2-roles-builder
    image: sv2-roles-builder-image  
    command: echo "SRI build completed"  
  
  #sv2-custom-proxies-builder:
    #build:
      #context: ../../
      #dockerfile: benches/benchmarking-tool/custom-proxies.dockerfile
    #container_name: custom-proxies-builder
    #image: custom-proxies-builder-image  
    #command: echo "Custom proxies build completed"

  sv1-custom-proxy-builder:
    build:
      dockerfile: ./sv1-custom-proxy/Dockerfile
    container_name: sv1-custom-proxy-builder
    image: sv1-custom-proxy-builder-image  
    command: echo "sv1-custom-proxy build completed"

  pools-latency-calculator-builder:
    build:
      dockerfile: pools-latency-calculator.dockerfile
    container_name: pools-latency-calculator-builder
    image: pools-latency-calculator-builder-image 
    command: echo "pools-latency-calculator build completed"

  template-provider-pool-side:
    build:
      dockerfile: ./template-provider.dockerfile
    image: sv2-template-provider
    command: ["/bitcoin/src/bitcoind", "-testnet4", "-sv2", "-sv2port=8442", "-sv2interval=60", "-sv2feedelta=0", "-debug=sv2", "-loglevel=sv2:trace", "-sv2bind=0.0.0.0"]   
    ports:
      - "8442:8442"
      - "18333:48333"
      - "8332:8332"
      - "48332:48332"
    container_name: sv2-tp-pool-side
    volumes:
      - bitcoin_pool_side_data:/root/.bitcoin
      - ./custom-configs/sri-roles/bitcoin-tp-pool.conf:/root/.bitcoin/bitcoin.conf
    restart: unless-stopped
    networks:
      sv2-net:
          ipv4_address: 10.5.0.2

  sv1-node-pool-side:
    build:
      dockerfile: ./template-provider.dockerfile
    image: sv2-template-provider
    command: ["/bitcoin/src/bitcoind", "-testnet4"]   
    ports:
      - "38333:18333"
      - "48333:48332"
    container_name: sv1-node-pool-side
    volumes:
      - bitcoin_sv1_pool_side_data:/root/.bitcoin
      - ./custom-configs/sri-roles/bitcoin-sv1-node-pool.conf:/root/.bitcoin/bitcoin.conf
    restart: unless-stopped
    networks:
      sv2-net:
          ipv4_address: 10.5.0.16

  pool:
    image: sv2-roles-builder-image  
    command: ["./target/release/pool_sv2", "-c", "pool/config-examples/pool-config-c-docker-example.toml"]
    ports:
      - "34254:34254" 
    container_name: sv2-pool
    depends_on:
      - sv2-roles-builder
      - template-provider-pool-side
    volumes:
      - ./custom-configs/sri-roles/config-c:/usr/src/stratum/roles/pool/config-examples/
    restart: unless-stopped
    networks:
      sv2-net:
          ipv4_address: 10.5.0.4

  translator:
    image: sv2-roles-builder-image
    command: ["./target/release/translator_sv2", "-c", "translator/config-examples/tproxy-config-c-docker-example.toml"]
    ports:
      - "34255:34255" 
    container_name: sv2-translator
    depends_on:
      - pool 
    volumes:
      - ./custom-configs/sri-roles/config-c:/usr/src/stratum/roles/translator/config-examples/
    restart: unless-stopped
    networks:
      sv2-net:
          ipv4_address: 10.5.0.7

  #pool-jdc-proxy:
    #image: custom-proxies-builder-image  
    #command: ["./target/release/proxy-between-pool-and-jdc"]
    #ports:
      #- "34254:34254" 
      #- "34251:34251"
    #container_name: pool-jdc-proxy
    #depends_on:
      #- custom-proxies-builder
      #- pool
    #volumes:
      #- ./custom-configs/sri-roles/config-a:/usr/src/stratum/roles/pool/config-examples/
    #restart: unless-stopped
    #networks:
      #sv2-net:
          #ipv4_address: 10.5.0.17

  sv1-pool:
    container_name: sv1-pool
    build:
      context: .
      dockerfile: ./sv1-pool.dockerfile
    ports:
      - "3332:3332"
      - "3334:3334"
    volumes:
      - "./testnet-DB:/public-pool/DB"
      - "./custom-configs/sv1-pool/.env:/public-pool/.env:ro"
      - "./custom-configs/sv1-pool/rpc.js:/public-pool/node_modules/rpc-bitcoin/build/src/rpc.js" # to fix rpc-version field issue 
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    networks:
      sv2-net:
        ipv4_address: 10.5.0.8
    cap_add:
    - NET_ADMIN

  sv1-custom-proxy:
    image: sv1-custom-proxy-builder-image  
    command: ["./target/release/proxy-miner-sv1-pool"]
    ports:
      - "3333:3333"
      - "2345:2345"
    container_name: sv1-custom-proxy
    depends_on:
      - sv1-custom-proxy-builder
      - sv1-pool
    restart: unless-stopped
    networks:
      sv2-net:
          ipv4_address: 10.5.0.19

  monitor-traffic-tcpdump:
    image: inzania/network-traffic-metrics:latest
    network_mode: host
    container_name: monitor-traffic-tcpdump
    environment:
      - "NTM_INTERFACE=any"
      - "NTM_FILTERS="

  prometheus:
    image: prom/prometheus:v2.36.2
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data_config_c:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    ports:
      - 9090:9090
    container_name: prometheus
    depends_on:
      - cadvisor
    networks:
      sv2-net:
        ipv4_address: 10.5.0.9
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure
    extra_hosts:
      - "host.docker.internal:10.5.0.1"

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    container_name: node-exporter
    networks:
      sv2-net:
        ipv4_address: 10.5.0.10
    deploy:
      mode: global
      restart_policy:
          condition: on-failure   

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      #- /var/run:/var/run:rw
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    container_name: cadvisor
    networks:
      sv2-net:
        ipv4_address: 10.5.0.12
    deploy:
      mode: global
      restart_policy:
          condition: on-failure

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    environment:
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      GF_AUTH_DISABLE_SIGNOUT_MENU: "true"
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
      GF_RENDERING_SERVER_URL: http://renderer:8081/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/
      GF_LOG_FILTERS: rendering:debug
    container_name: grafana
    volumes:
      - grafana_data_config_c:/var/lib/grafana
      - ./grafana/provisioning/dashboards/config-c:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    env_file:
      - ./grafana/config.monitoring
    networks:
      sv2-net:
        ipv4_address: 10.5.0.13
    user: "472"
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure

  reporter:
    image: izakmarais/grafana-reporter:${gr_version:-latest}
    command: "-ip grafana:3000"
    container_name: reporter
    depends_on:
      - grafana
    ports:
      - "8686:8686"
    networks:
      sv2-net:
        ipv4_address: 10.5.0.14


  renderer:
    image: grafana/grafana-image-renderer:latest
    container_name: renderer
    depends_on:
      - grafana
    ports:
      - "8081:8081"
    networks:
      sv2-net:
        ipv4_address: 10.5.0.15

  pools-latency-calculator:
    image: pools-latency-calculator-builder-image  
    command: ["./target/release/pools-latency-calculator"]
    ports:
      - "1234:1234" 
    container_name: pools-latency-calculator
    restart: unless-stopped
    networks:
      sv2-net:
          ipv4_address: 10.5.0.18